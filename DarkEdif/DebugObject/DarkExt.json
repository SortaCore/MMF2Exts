{
	"Identifier": "DBGO",
	"Dependencies": "",
	"UK English": {
		"About": {
			"Name": "DebugObject",
			"Author": "Darkwire Software",
			"Copyright": "Copyright \u00A9 2025 by Darkwire Software",
			"Comment": "An easy debugging extension. (b%i)",
			"Help": "Help/DebugObject.chm",
			"URL": "https://dark-wire.com/"
		},
		"ActionMenu": [
			[ 0, "Output" ],
			"---",
			[ 1, "Set output file" ],
			[ 2, "Set output time format" ],
			[ 3, "Set debug enabled/disabled" ],
			[ 11, "Set console enabled/disabled" ],
			// [ 13, "Set process to boot on crash" ],
			"---",
			[ 4, "Set crash handling" ],
			[ 12, "Set minidump settings" ],
			[ "Cause crash",
				[ 5, "Division by zero (int)" ],
				[ 6, "Division by zero (float)" ],
				"---",
				[ 7, "Access violation (read)" ],
				[ 8, "Access violation (write)" ],
				[ 9, "Access violation (read array)" ],
				[ 10, "Access violation (write array)" ]
			]
			/*,
			[ "Set email format",
				[ 14, "Email from" ],
				[ 15, "Email to" ],
				[ 16, "Email subject" ],
				[ 17, "Email content" ],
				[ 18, "Set log file position" ]
			]*/
		],
		"ConditionMenu": [
			[ 2, "On program crash" ],
			[ "Console",
				[ 0, "On any console command" ],
				[ 1, "On specific console command" ],
				"---",
				[ 3, "On console Ctrl+C event" ],
				[ 4, "On console Ctrl+Break event" ]
			],
			"---",
			[ 5, "Darkwire Software", true ]
		],
		"ExpressionMenu": [
			[ 0, "Get full command" ],
			[ 1, "Get parameters of command" ]
		],
		"Actions": [
			{
				"Title": "Log (intensity %0 from line %1)",
				"Parameters": [
					[ "Integer", "Intensity of log (e.g. 0 = error, 1 = warning, 2 = notice ... you decide the meaning):" ],
					[ "Integer", "Line of log (event number, occurance number, etc):" ],
					[ "Text", "Text to output:" ]
				]
			},
			{
				"Title": "Set log file to %0",
				"Parameters": [
					[ "Text", "File to output to:" ],
					[ "Integer", "Enable application description (output path & details):" ]
				]
			},
			{
				"Title": "Set output time format to %0",
				"Parameters": [
					[ "Text", "Time format to output to (Default %%X, just Google strftime() function):" ]
				]
			},
			{
				"Title": "Set output enabled to %0",
				"Parameters": [
					[ "Integer", "Use non-zero for enable, zero for disabling:" ]
				]
			},
			{
				"Title": "Set crash handling: mode %0 (continues %1)",
				"Parameters": [
					[ "Integer", "How to handle this? (see object help):" ],
					[ "Integer", "If you specified continuing, how many times before giving up? (1-10):" ]
				]
			},
			{
				"Title": "Cause crash: division by zero (int)"
			},
			{
				"Title": "Cause crash: division by zero (float)"
			},
			{
				"Title": "Cause crash: access violation (read)"
			},
			{
				"Title": "Cause crash: access violation (write)"
			},
			{
				"Title": "Cause crash: access violation (read array)"
			},
			{
				"Title": "Cause crash: access violation (write array)"
			},
			{
				"Title": "Set console enabled to %0",
				"Parameters": [
					[ "Integer", "Use non-zero for enable, zero for disabling:" ]
				]
			},
			{
				"Title": "Set minidump generation: path %0",
				"Parameters": [
					[ "Text", "Minidump file path (*.dmp, use \"\" for no minidump generation):" ],
					[ "Integer", "Minidump flags (see object help):" ]
				]
			}
		],
		"Conditions": [
			{
				"Title": "%o: On any console command",
				"Triggered": true
			},
			{
				"Title": "%o: On console command %0",
				"Triggered": true,
				"Parameters": [
					[ "Text", "Enter what will be before the first space:" ]
				]
			},
			{
				"Title": "%o: On program crash",
				"Triggered": true
			},
			{
				"Title": "%o: On console Ctrl+C event",
				"Triggered": true
			},
			{
				"Title": "%o: On console Ctrl+Break event",
				"Triggered": true
			},
			// Disabled condition Darkwire Software, shouldn't be creatable
			{
				"Title": "%o: Wha?"
			}
		],
		"Expressions": [
			{
				"Title": "FullCommand$(",
				"Returns": "Text"
			},
			{
				"Title": "CommandParams$(",
				"Returns": "Text"
			}
		],
		"Properties": [
			{
				"Title": "Enable at start",
				"Info": "Default to output enabled at start",
				"Type": "Checkbox",
				"DefaultState": true
			},
			{
				"Title": "Show message if path invalid",
				"Info": "If encountered a crash with an invalid log path, show message box instead?",
				"Type": "Checkbox",
				"DefaultState": true
			},
			{
				"Title": "Initial path",
				"Info": "Output to this path if debug is enabled.",
				"Type": "Editbox String",
				"DefaultState": ""
			},
			{
				"Title": "Enable console",
				"Info": "If debug output is enabled, show all outputs in console, at start?",
				"Type": "Checkbox",
				"DefaultState": false
			},
			{
				"Title": "Pause for debugger",
				"Info": "C++ EXT DEVS ONLY: When the extension initialises, it will pause and create a message box, allowing a debugger to be attached.",
				"Type": "Checkbox",
				"DefaultState": false
			}
		]
	}
}
